<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rrx.cnuo.service.dao.TradeMapper">
  <resultMap id="BaseResultMap" type="rrx.cnuo.service.po.Trade">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pay_order_no" jdbcType="VARCHAR" property="payOrderNo" />
    <result column="trade_type" jdbcType="TINYINT" property="tradeType" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="withdraw_type" jdbcType="BIT" property="withdrawType" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="reserve_data" jdbcType="VARCHAR" property="reserveData" />
    <result column="trade_status" jdbcType="TINYINT" property="tradeStatus" />
    <result column="business_type" jdbcType="TINYINT" property="businessType" />
    <result column="send_time" jdbcType="INTEGER" property="sendTime" />
    <result column="receive_time" jdbcType="INTEGER" property="receiveTime" />
    <result column="reconciliation_status" jdbcType="BIT" property="reconciliationStatus" />
    <result column="reconciliation_time" jdbcType="INTEGER" property="reconciliationTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pay_order_no, trade_type, uid, withdraw_type, amount, reserve_data, trade_status, 
    business_type, send_time, receive_time, reconciliation_status, reconciliation_time, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade
    where id = #{id,jdbcType=BIGINT}
    for update
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertSelective" parameterType="rrx.cnuo.service.po.Trade">
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payOrderNo != null">
        pay_order_no,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="withdrawType != null">
        withdraw_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="reserveData != null">
        reserve_data,
      </if>
      <if test="tradeStatus != null">
        trade_status,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="reconciliationStatus != null">
        reconciliation_status,
      </if>
      <if test="reconciliationTime != null">
        reconciliation_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="payOrderNo != null">
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=TINYINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="withdrawType != null">
        #{withdrawType,jdbcType=BIT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="reserveData != null">
        #{reserveData,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        #{tradeStatus,jdbcType=TINYINT},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=INTEGER},
      </if>
      <if test="reconciliationStatus != null">
        #{reconciliationStatus,jdbcType=BIT},
      </if>
      <if test="reconciliationTime != null">
        #{reconciliationTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="rrx.cnuo.service.po.Trade">
    update trade
    <set>
      <if test="payOrderNo != null">
        pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=TINYINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="withdrawType != null">
        withdraw_type = #{withdrawType,jdbcType=BIT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="reserveData != null">
        reserve_data = #{reserveData,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        trade_status = #{tradeStatus,jdbcType=TINYINT},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=INTEGER},
      </if>
      <if test="reconciliationStatus != null">
        reconciliation_status = #{reconciliationStatus,jdbcType=BIT},
      </if>
      <if test="reconciliationTime != null">
        reconciliation_time = #{reconciliationTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getBalancePaySuccUnReconciledAmt" parameterType="java.lang.Long" resultType="Integer">
	  	SELECT ifnull(SUM(b.amount), 0)
		FROM trade b
		WHERE b.uid = #{userId}
		and b.withdraw_type = 0
		and b.trade_type = 2
		AND b.trade_status = 3
		and b.reconciliation_status = 0
  	</select>
  	
  	<select id="getOrderToDealwith" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List"></include>
		FROM trade t
		WHERE 1=1
		AND(
			(
				t.trade_status = 1
				AND t.trade_type IN (12)
				AND t.send_time &lt; UNIX_TIMESTAMP(SUBDATE(now(),interval 900 second))
			)
			or
			(
				t.trade_status = 2
				AND t.trade_type NOT IN (12)
				and t.send_time &lt; UNIX_TIMESTAMP(SUBDATE(now(),interval 60 second))
			)
		)
		AND t.send_time > UNIX_TIMESTAMP(SUBDATE(now(),interval 8 day))
	</select>
	
	<select id="getTradeByParam" parameterType="rrx.cnuo.service.po.Trade"  resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List"></include>
		FROM trade t
	    <where>
			<if test="uid != null">
				and t.uid = #{uid}
			</if>
			<if test="businessType != null">
				and t.business_type = #{businessType}
			</if>
			<if test="withdrawType != null">
	    		and withdraw_type = #{withdrawType,jdbcType=BIT}
	    	</if>
	    	<if test="tradeStatus != null">
	    		and trade_status = #{tradeStatus,jdbcType=TINYINT}
	    	</if>
	    	<if test="reconciliationStatus != null">
	    		and reconciliation_status = #{reconciliationStatus,jdbcType=TINYINT}
	    	</if>
	    	<if test="sendTime != null">
	    		and send_time = #{sendTime,jdbcType=INTEGER}
	    	</if>
	    	<if test="tradeStatusBegin != null">
	    		and trade_status > #{tradeStatusBegin,jdbcType=TINYINT}
	    	</if>
	    	<if test="tradeStatusEnd != null">
	    		and trade_status &lt; #{tradeStatusEnd,jdbcType=TINYINT}
	    	</if>
	    	<if test="sendBeginTime != null">
	    		and send_time >= #{sendBeginTime,jdbcType=INTEGER}
	    	</if>
	    	<if test="sendEndTime != null">
	    		and send_time &lt; #{sendEndTime,jdbcType=INTEGER}
	    	</if>
		</where>
	</select>
</mapper>