<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rrx.cnuo.service.dao.UserPassportMapper">
  <resultMap id="BaseResultMap" type="rrx.cnuo.service.po.UserPassport">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="regist_tel" jdbcType="VARCHAR" property="registTel" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="mini_open_id" jdbcType="VARCHAR" property="miniOpenId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="subscribe" jdbcType="BIT" property="subscribe" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, password, salt, regist_tel, open_id, mini_open_id,nick_name,avatar_url,subscribe, create_time, update_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_passport
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  
  <select id="selectByWxOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_passport
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByWxMiniOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_passport
    where mini_open_id = #{miniOpenId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_passport
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertSelective" parameterType="rrx.cnuo.service.po.UserPassport">
    insert into user_passport
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="registTel != null">
        regist_tel,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="miniOpenId != null">
        mini_open_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="subscribe != null">
        subscribe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="registTel != null">
        #{registTel,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="miniOpenId != null">
        #{miniOpenId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="subscribe != null">
        #{subscribe,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="rrx.cnuo.service.po.UserPassport">
    update user_passport
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="registTel != null">
        regist_tel = #{registTel,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="miniOpenId != null">
        mini_open_id = #{miniOpenId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="subscribe != null">
        subscribe = #{subscribe,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>