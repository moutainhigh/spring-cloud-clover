<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rrx.cnuo.service.dao.CreditManualMapper">
  <resultMap id="BaseResultMap" type="rrx.cnuo.service.po.CreditManual">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="pic_url_list" jdbcType="VARCHAR" property="picUrlList" />
    <result column="pic_type" jdbcType="TINYINT" property="picType" />
    <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, pic_url_list, pic_type, audit_status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from credit_manual
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from credit_manual
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="rrx.cnuo.service.po.CreditManual">
    insert into credit_manual (id, uid, pic_url_list, 
      pic_type, audit_status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{picUrlList,jdbcType=VARCHAR}, 
      #{picType,jdbcType=TINYINT}, #{auditStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="rrx.cnuo.service.po.CreditManual">
    insert into credit_manual
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="picUrlList != null">
        pic_url_list,
      </if>
      <if test="picType != null">
        pic_type,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="picUrlList != null">
        #{picUrlList,jdbcType=VARCHAR},
      </if>
      <if test="picType != null">
        #{picType,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="rrx.cnuo.service.po.CreditManual">
    update credit_manual
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="picUrlList != null">
        pic_url_list = #{picUrlList,jdbcType=VARCHAR},
      </if>
      <if test="picType != null">
        pic_type = #{picType,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="rrx.cnuo.service.po.CreditManual">
    update credit_manual
    set uid = #{uid,jdbcType=BIGINT},
      pic_url_list = #{picUrlList,jdbcType=VARCHAR},
      pic_type = #{picType,jdbcType=TINYINT},
      audit_status = #{auditStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>